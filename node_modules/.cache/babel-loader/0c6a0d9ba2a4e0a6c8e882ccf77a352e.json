{"ast":null,"code":"var _jsxFileName = \"/Users/atulbahniwal/Desktop/pixabay-image/src/component/image-result/ImageResult.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass ImageResult extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      oprn: false,\n      currentImg: ''\n    };\n\n    this.handleOpen = img => {\n      this.setState({\n        open: true,\n        currentImg: img\n      });\n    };\n\n    this.handleClose = img => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    let imageListContent;\n    const images = this.props.images;\n\n    if (images) {\n      imageListContent = React.createElement(GridList, {\n        cols: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, images.map(img => React.createElement(GridTile, {\n        title: img.tags,\n        key: img.id,\n        subtitle: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"by \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, img.user)),\n        actionIcon: React.createElement(IconButton, {\n          onClick: () => this.handleOpen(img.largeImageURL),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(ZoomIn, {\n          color: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: img.largeImageURL,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }))));\n    } else {\n      imageListContent = null;\n    }\n\n    const actions = [React.createElement(FlatButton, {\n      label: \"Close\",\n      primary: true,\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, imageListContent, React.createElement(Dialog, {\n      actions: actions,\n      modal: false,\n      open: this.state.open,\n      onRequestClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.currentImg,\n      alt: \"\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}\n\nImageResult.propTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default ImageResult;","map":{"version":3,"sources":["/Users/atulbahniwal/Desktop/pixabay-image/src/component/image-result/ImageResult.js"],"names":["React","Component","PropTypes","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","ImageResult","state","oprn","currentImg","handleOpen","img","setState","open","handleClose","render","imageListContent","images","props","map","tags","id","user","largeImageURL","actions","width","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\n\n class ImageResult extends Component {\n\n    state = {\n        oprn: false,\n        currentImg:''\n    }\n\n    handleOpen = img => {\n        this.setState({ open: true, currentImg: img })\n    }\n\n    handleClose = img => {\n        this.setState({ open: false })\n    }\n\n  render() {\n\n    let imageListContent;\n    const {images} = this.props;\n\n    if(images){\n        imageListContent = (\n            <GridList cols={3}>\n                {images.map(img => (\n                    <GridTile\n                    title={img.tags}\n                        key={img.id}\n                        subtitle={\n                            <span>\n                                by <strong>{img.user}</strong>\n                            </span>\n                        }\n                        actionIcon={\n                            <IconButton onClick={ () => this.handleOpen(img.largeImageURL)}>\n                                <ZoomIn color=\"white\"/>\n                            </IconButton>\n                        }\n                    >\n                    <img src={img.largeImageURL} alt=\"\"/>\n                        \n                    </GridTile>\n                ))}\n            </GridList>\n        )\n    }else{\n        imageListContent = null;\n    }\n\n    const actions = [\n        <FlatButton label=\"Close\" primary={true} onClick={this.handleClose}/>\n    ]\n\n    return (\n      <div>\n        {imageListContent}\n        <Dialog\n        actions={actions}\n        modal={false}\n        open={this.state.open}\n        onRequestClose={this.handleClose}\n        >\n        <img src={this.state.currentImg} alt=\"\" style={{ width: '100%' }}/>\n\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nImageResult.propTypes = {\n    images: PropTypes.array.isRequired\n}\n\nexport default ImageResult;\n\n"]},"metadata":{},"sourceType":"module"}