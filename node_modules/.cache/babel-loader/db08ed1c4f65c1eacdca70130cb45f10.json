{"ast":null,"code":"var _jsxFileName = \"/Users/atulbahniwal/Desktop/pixabay-image/src/component/image-result/ImageResult.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-Types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass ImageResult extends Component {\n  render() {\n    let imageListContent;\n    const images = this.props.images;\n\n    if (images) {\n      imageListContent = React.createElement(GridList, {\n        cols: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, images.map(img => React.createElement(GridTile, {\n        title: img.tags,\n        key: img.id,\n        subtitle: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"by \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, img.user)),\n        actionIcon: React.createElement(IconButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(ZoomIn, {\n          color: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: img.largeImageURL,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }))));\n    } else {\n      imageListContent = null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, imageListContent);\n  }\n\n}\n\nImageResult.propTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default ImageResult;","map":{"version":3,"sources":["/Users/atulbahniwal/Desktop/pixabay-image/src/component/image-result/ImageResult.js"],"names":["React","Component","PropTypes","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","ImageResult","render","imageListContent","images","props","map","img","tags","id","user","largeImageURL","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,sBAAnC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAGC,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AACnCS,EAAAA,MAAM,GAAG;AAEP,QAAIC,gBAAJ;AAFO,UAGAC,MAHA,GAGU,KAAKC,KAHf,CAGAD,MAHA;;AAKP,QAAGA,MAAH,EAAU;AACND,MAAAA,gBAAgB,GACZ,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,MAAM,CAACE,GAAP,CAAWC,GAAG,IACX,oBAAC,QAAD;AACA,QAAA,KAAK,EAAEA,GAAG,CAACC,IADX;AAEI,QAAA,GAAG,EAAED,GAAG,CAACE,EAFb;AAGI,QAAA,QAAQ,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASF,GAAG,CAACG,IAAb,CADP,CAJR;AAQI,QAAA,UAAU,EACN,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcA;AAAK,QAAA,GAAG,EAAEH,GAAG,CAACI,aAAd;AAA6B,QAAA,GAAG,EAAC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdA,CADH,CADL,CADJ;AAuBH,KAxBD,MAwBK;AACDR,MAAAA,gBAAgB,GAAG,IAAnB;AACH;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,gBADH,CADF;AAKD;;AAvCkC;;AA0CrCF,WAAW,CAACW,SAAZ,GAAwB;AACpBR,EAAAA,MAAM,EAAEV,SAAS,CAACmB,KAAV,CAAgBC;AADJ,CAAxB;AAIA,eAAeb,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-Types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\n\n class ImageResult extends Component {\n  render() {\n\n    let imageListContent;\n    const {images} = this.props;\n\n    if(images){\n        imageListContent = (\n            <GridList cols={3}>\n                {images.map(img => (\n                    <GridTile\n                    title={img.tags}\n                        key={img.id}\n                        subtitle={\n                            <span>\n                                by <strong>{img.user}</strong>\n                            </span>\n                        }\n                        actionIcon={\n                            <IconButton>\n                                <ZoomIn color=\"white\"/>\n                            </IconButton>\n                        }\n                    >\n                    <img src={img.largeImageURL} alt=\"\"/>\n                        \n                    </GridTile>\n                ))}\n            </GridList>\n        )\n    }else{\n        imageListContent = null;\n    }\n\n    return (\n      <div>\n        {imageListContent}\n      </div>\n    )\n  }\n}\n\nImageResult.propTypes = {\n    images: PropTypes.array.isRequired\n}\n\nexport default ImageResult;\n\n"]},"metadata":{},"sourceType":"module"}